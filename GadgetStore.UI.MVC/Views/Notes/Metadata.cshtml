@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Metadata notes";
}
<section class="product_section gray-section pb-4 pt-4 mb-4">
    <div class="heading_container heading_center">
        <h2>
            Metadata <span>(Buddy Classes)</span>
        </h2>
    </div>
</section>

<section class="pb-4 pt-4 mb-4">
    <p>
        Metadata is the key to enforcing rules that users must follow when it comes to handling Models.  With metadata, we are able to manipulate EF's scaffolded Models and add things like
        Validation, Display Formatting, and adjust column headers.  There are many other helpful uses for metadata, like creating custom properties (FullName) or custom methods - anything you
        might need from a C# class.
    </p>
    <p>
        Metadata is sometimes referred to as a 'Buddy Class,' as it is an extension of the class that was scaffolded by Entity Framework.  We use the <strong>partial</strong> keyword
        when defining metadata classes so we can hook up validation and rules for our Models.
    </p>
    <p>
        For each class that was generated by EF, we will typically add <strong>2 more</strong> classes - the partial class and the metadata class.  For example, if EF scaffolds a Model for
        Products, we would find <code>public partial class Product</code> in our Models, and then create 2 new classes in a separate file - <code>public class ProductMetadata</code>, and
        <code>public partial class Product</code> with the annotation <code>[ModelMetadataType(typeof(ProductMetadata))]</code>.  Your properties will be listed within the Metadata class,
        which can be copied from the originally scaffolded partial class.
    </p>
    <p>
        <h3>Common Metadata Practices</h3>
        <ul>
            <li>
                Validating form input when creating or editing a record
                <ul>
                    <li><code>[Required(ErrorMessage = "Message Here")]</code></li>
                    <li><code>[StringLength(# for max length, ErrorMessage = "Message Here")]</code></li>
                    <li><code>[Range(# for lowest allowed, # for largest allowed, ErrorMessage = "Message Here")]</code></li>

                </ul>
            </li>
            <li>
                Changing the way data displays
                <ul>
                    <li><code>[DisplayFormat(DataFormatString = "{0:formatChar}", ApplyFormatInEditMode = true/false)]</code></li>
                    <li><code>[Display(Name = "Column Header Here")]</code></li>
                </ul>
            </li>
        </ul>
    </p>
    <p>
        <h3>Example metadata classes</h3>
        <ul>
            <li>
                Class scaffolded by EF - Product.cs

                <pre>
                <code>
            public partial class Product
            {
                public Product()
                {
                    OrderProducts = new HashSet&lt;OrderProduct&gt;();
                }

                public int ProductId { get; set; }
                public string ProductName { get; set; } = null!;
                public decimal ProductPrice { get; set; }
                public string? ProductDescription { get; set; }
                public short UnitsInStock { get; set; }
                public short UnitsOnOrder { get; set; }
                public bool IsDiscontinued { get; set; }
                public int CategoryId { get; set; }
                public int? SupplierId { get; set; }
                public string? ProductImage { get; set; }
                public virtual Category? Category { get; set; }
                public virtual Supplier? Supplier { get; set; }
                public virtual ICollection&lt;OrderProduct&gt; OrderProducts { get; set; }
            }
                </code>
                </pre>

            </li>
            <li>
                Partial class added by you, in your Metadata folder - Partials.cs
                <pre>
                <code>
            [ModelMetadataType(typeof(ProductMetadata))]
            public partial class Product
            {
                [NotMapped]
                public IFormFile? Image { get; set; }//Custom property added to handle file upload
            }
                </code>
                </pre>
            </li>
            <li>
                Metadata class added by you, in your Metadata folder - Metadata.cs
                <pre>
                <code>
            public class ProductMetadata
            {
                public int ProductId { get; set; }

                [StringLength(200, ErrorMessage = "Must not exceed 200 characters")]
                [Display(Name = "Product")]
                public string ProductName { get; set; } = null!;

                [DisplayFormat(DataFormatString = "{0:c}")]
                [Display(Name = "Price")]
                [Range(0, double.MaxValue, ErrorMessage = "Value must be greater than 0")]
                public decimal ProductPrice { get; set; }

                [StringLength(500, ErrorMessage = "Must not exceed 500 characters")]
                [Display(Name = "Description")]
                public string? ProductDescription { get; set; }

                [Display(Name = "In Stock")]
                public short UnitsInStock { get; set; }

                [Display(Name = "On Order")]
                public short UnitsOnOrder { get; set; }

                [Display(Name = "Discontinued?")]
                public bool IsDiscontinued { get; set; }
                public int CategoryId { get; set; }
                public int? SupplierId { get; set; }

                [Display(Name = "Image")]
                public string? ProductImage { get; set; }

            }
                </code>
                </pre>
            </li>
        </ul>
    </p>


</section>